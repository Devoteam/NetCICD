lab:
  description: LAB specifically created for NetCICD Box testing
  notes: ''
  title: stage-box.yaml
  version: 0.1.0
links:
  - id: l0
    n1: n0
    n2: n2
    i1: i1
    i2: i0
    label: CE1,141, ios-GigabitEthernet0/0<->Management VLAN-port0
  - id: l1
    n1: n1
    n2: n2
    i1: i1
    i2: i2
    label: PE1, 131, XRv-MgmtEth0/0/CPU0/0<->Management VLAN-port2
  - id: l2
    n1: n3
    n2: n2
    i1: i1
    i2: i1
    label: PE3, 133, nxos-mgmt0<->Management VLAN-port1
  - id: l3
    n1: n4
    n2: n2
    i1: i1
    i2: i5
    label: RR1, 121, xe-GigabitEthernet1<->Management VLAN-port5
  - id: l4
    n1: n5
    n2: n6
    i1: i0
    i2: i0
    label: ext-conn-1-port<->NetCICD-Agent-ens2
  - id: l5
    n1: n6
    n2: n2
    i1: i1
    i2: i4
    label: NetCICD-Agent-ens3<->Management VLAN-port4
  - id: l6
    n1: n8
    n2: n7
    i1: i0
    i2: i0
    label: coreos-0-eth0<->ext-conn-0-port
  - id: l7
    n1: n8
    n2: n2
    i1: i1
    i2: i3
    label: coreos-0-eth1<->Management VLAN-port3
  - id: l8
    n1: n9
    n2: n10
    i1: i0
    i2: i0
    label: coreos-0_0-eth0<->ext-conn-2-port
  - id: l9
    n1: n9
    n2: n2
    i1: i1
    i2: i6
    label: coreos-0_0-eth1<->Management VLAN-port6
nodes:
  - boot_disk_size: 0
    configuration: |-
      aaa new-model
      !
      aaa session-id common
      aaa authorization exec default local
      !
      no ip icmp rate-limit unreachable
      !
      ip domain name netcicd
      !
      hostname cust1
      username netcicd-pipeline privilege 15 secret C!sco123
      enable secret C!sco123
      !
      ip tcp synwait-time 5
      ip ssh version 2
      crypto key gen rsa mod 2048
      !
      interface GigabitEthernet0/0
       ip address 10.255.1.141 255.255.255.0
       no shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/1
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/2
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/3
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      line vty 0 4
       transport input telnet ssh
      !
      end
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n0
    label: CE1,141, ios
    node_definition: iosv
    ram: 0
    tags:
      - CE1
    x: -650
    y: 0
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: GigabitEthernet0/0
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet0/1
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet0/2
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet0/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: |2-

      Fri Apr  9 06:53:26.092 UTC
      Building configuration...
      !! IOS XR Configuration 6.3.1
      !! Last configuration change at Fri Apr  9 06:53:23 2021 by cisco
      !
      hostname provedge2
      logging console disable
      service timestamps log datetime msec
      service timestamps debug datetime msec
      telnet vrf default ipv4 server max-servers 10
      telnet vrf Mgmt-intf ipv4 server max-servers 10
      domain name netcicd
      domain lookup disable
      username netcicd-pipeline
        group root-lr
        secret 0 C!sco123
      !
      line template vty
       timestamp
       exec-timeout 720 0
      !
      line console
       exec-timeout 0 0
       absolute-timeout 0
       session-timeout 0
      !
      line default
       exec-timeout 0 0
       absolute-timeout 0
       session-timeout 0
      !
      vty-pool default 0 50
      control-plane
       management-plane
        inband
         interface all
          allow all
         !
        !
       !
      !
      interface Loopback0
       description to
       shutdown
      !
      interface MgmtEth0/0/CPU0/0
       description *** management ***
       ipv4 address 10.255.1.131 255.255.255.0
       no shutdown
      !
      interface GigabitEthernet0/0/0/0
       description to
       shutdown
      !
      interface GigabitEthernet0/0/0/1
       description to
       shutdown
      !
      interface GigabitEthernet0/0/0/2
       description to
       shutdown
      !
      netconf agent tty
      !
      netconf-yang agent
       ssh
      !
      ssh server v2
      ssh server netconf vrf default
      end
    cpu_limit: 100
    cpus: 2
    data_volume: 0
    hide_links: false
    id: n1
    label: PE1, 131, XRv
    node_definition: iosxrv9000
    ram: 4096
    tags: []
    x: -500
    y: 100
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: MgmtEth0/0/CPU0/0
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet0/0/0/0
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet0/0/0/1
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet0/0/0/2
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: ums-c5c8cae1-ce
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n2
    label: Management VLAN
    node_definition: unmanaged_switch
    ram: 0
    tags: []
    x: -500
    y: 0
    interfaces:
      - id: i0
        label: port0
        slot: 0
        type: physical
      - id: i1
        label: port1
        slot: 1
        type: physical
      - id: i2
        label: port2
        slot: 2
        type: physical
      - id: i3
        label: port3
        slot: 3
        type: physical
      - id: i4
        label: port4
        slot: 4
        type: physical
      - id: i5
        label: port5
        slot: 5
        type: physical
      - id: i6
        label: port6
        slot: 6
        type: physical
      - id: i7
        label: port7
        slot: 7
        type: physical
  - boot_disk_size: 0
    configuration: |-
      !
      license grace-period
      !
      hostname PE3
      vdc nxos-0 id 1
        allocate interface Ethernet2/1-48
        allocate interface Ethernet3/1-48
        limit-resource vlan minimum 16 maximum 4094
        limit-resource vrf minimum 2 maximum 4096
        limit-resource port-channel minimum 0 maximum 768
        limit-resource u4route-mem minimum 96 maximum 96
        limit-resource u6route-mem minimum 24 maximum 24
        limit-resource m4route-mem minimum 58 maximum 58
        limit-resource m6route-mem minimum 8 maximum 8

      feature telnet
      feature privilege
      feature scp
      feature ssh

      username adminbackup password 5 ! role network-operator
      username admin password C!sco123 role network-admin
      username netcicd-pipeline password C!sco123 role network-operator
      username netcicd-pipeline role network-admin

      no password strength-check
      ip domain-lookup
      copp profile strict

      rmon event 1 log trap public description FATAL(1) owner PMON@FATAL
      rmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL
      rmon event 3 log trap public description ERROR(3) owner PMON@ERROR
      rmon event 4 log trap public description WARNING(4) owner PMON@WARNING
      rmon event 5 log trap public description INFORMATION(5) owner PMON@INFO

      vlan 1

      hardware forwarding unicast trace

      vrf context management
      hardware forwarding unicast trace

      interface Loopback0
          description PE3-Loopback
          ip address 192.168.0.133/32
          duplex auto
          no shut

      interface mgmt0
          description OOB Management
          ip address 10.255.1.133 255.255.255.0
          duplex auto
          no shut

      interface Ethernet2/1
          description to
          no ip address
          duplex full
          shutdown

      interface Ethernet2/2
          description to
          no ip address
          duplex full
          shutdown

      interface Ethernet2/3
          description to
          no ip address
          duplex full
          shutdown

      !
      ssh key rsa 2048
      !
      xml server max-session 8
      xml server timeout 1200

      line console
      line vty
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n3
    label: PE3, 133, nxos
    node_definition: nxosv9000
    ram: 0
    tags: []
    x: -350
    y: 0
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet2/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet2/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet2/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: |-
      hostname reflector
      !
      username netcicd-pipeline privilege 15 secret C!sco123
      !
      interface GigabitEthernet1
       ip address 10.255.1.121 255.255.255.0
       negotiation auto
       no shutdown
      enable secret C!sco123
      aaa new-model
      aaa session-id common
      aaa authorization exec default local
      ip domain name netcicd
      ip ssh version 2
      !
      line vty 0 4
        transport input ssh
      !
      crypto key gen rsa mod 2048
      !
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n4
    label: RR1, 121, xe
    node_definition: csr1000v
    ram: 0
    tags: []
    x: -650
    y: 100
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: GigabitEthernet1
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet2
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet3
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet4
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: virbr0
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n5
    label: ext-conn-1
    node_definition: external_connector
    ram: 0
    tags: []
    x: -650
    y: -200
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical
  - boot_disk_size: 64
    configuration: |-
      #cloud-config
      hostname: NetCICD-agent
      manage_etc_hosts: True
      system_info:
        default_user:
          name: cisco
      password: cisco
      chpasswd: { expire: False }
      ssh_pwauth: True
    cpu_limit: 100
    cpus: 1
    data_volume: 0
    hide_links: false
    id: n6
    image_definition: ubuntu-20-04-20210927
    label: NetCICD-Agent
    node_definition: ubuntu
    ram: 2048
    tags: []
    x: -650
    y: -100
    interfaces:
      - id: i0
        label: ens2
        slot: 0
        type: physical
      - id: i1
        label: ens3
        slot: 1
        type: physical
  - boot_disk_size: 0
    configuration: virbr0
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n7
    label: ext-conn-0
    node_definition: external_connector
    ram: 0
    tags: []
    x: -496
    y: -216
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical
  - boot_disk_size: 64
    configuration: |-
      #cloud-config
      hostname: netcicd-agent
      coreos:
        units:
          - name: static.network
            content: |
              [Match]
              Name=eth1
              [Network]
              Address=10.255.1.3/24
          - name: runcmd.service
            command: start
            content: |
              [Unit]
              Description=Start container
              [Service]
              Type=oneshot
              ExecStart=/bin/sh -c "docker run -d netarch/netcicd:netcicd-4.0;"


      users:
      - gecos: "user configured for console login via cisco/cisco"
        groups:
        - sudo
        - docker
        - wheel
        name: cisco
        # password hash is "cisco" (MD5-based password "mkpasswd -5")
        passwd: "$1$ZmGq.4za$8JZnpj4SkcF9v3AJQaOX//"
        # this key will be added to the user "cisco"
        ssh_authorized_keys:
        - your-ssh-pubkey-line-for-user-cisco-goes-here
      # this key will be added to the user "core"
      ssh_authorized_keys:
      - your-ssh-pubkey-line-for-user-core-goes-here
    cpu_limit: 100
    cpus: 2
    data_volume: 0
    hide_links: false
    id: n8
    label: coreos-0
    node_definition: coreos
    ram: 2048
    tags: []
    x: -498
    y: -96
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
      - id: i1
        label: eth1
        slot: 1
        type: physical
  - boot_disk_size: 64
    configuration: |-
      #cloud-config
      hostname: netcicd-agent
      coreos:
        units:
          - name: static.network
            content: |
              [Match]
              Name=eth1
              [Network]
              Address=10.255.1.3/24
          - name: runcmd.service
            command: start
            content: |
              [Unit]
              Description=Start container
              [Service]
              Type=oneshot
              ExecStart=/bin/sh -c "docker run -d netarch/netcicd:netcicd-4.0;"
      write_files:
        - path: /etc/hosts
          owner: root:root
          permissions: '0644'
          content: |-
            # /etc/hosts: Local Host Database
            #
            # IPv4 and IPv6 localhost aliases
            127.0.0.1       localhost
            ::1             localhost
            172.16.11.3     gitea.tooling.provider.test
            172.16.11.8     jenkins.tooling.provider.test
            172.16.11.9     nexus.tooling.provider.test

        - path: /home/cisco/Dockerfile
          owner: cisco:cisco
          permissions: '0644'
          content: |-
            FROM ciscotestautomation/pyats:latest-alpine
            ENV JAVA_HOME "/usr"
            RUN apk add --update \
              openjdk11 \
              git \
              openssh \
              openssh-keygen \
              openssl \
              libxml2-dev \
              libxslt-dev \
              sshpass \
              curl \
              wget
            RUN pip3 install --upgrade pip
            RUN apk --update add --virtual \
              .build-deps \
              gcc \
              libffi-dev \
              openssl-dev \
              build-base \
            && apk del \
              .build-deps \
            && rm -rf /var/cache/apk/*
            ADD ssh_config /etc/ssh/ssh_config
            ADD requirements.txt /pyats/requirements.txt
            ADD workspace.init /pyats/workspace.init

            RUN echo "export JAVA_HOME=/usr" >> /etc/profile

            RUN adduser -D jenkins && (echo "jenkins:jenkins" | chpasswd) && (echo "root:root" | chpasswd)
            RUN curl -sO --insecure https://jenkins.tooling.provider.test:8084/jnlpJars/agent.jar
            RUN echo "[defaults]" > /home/jenkins/.ansible.cfg
            RUN echo "host_key_checking = False" >> /home/jenkins/.ansible.cfg
            RUN chown jenkins:jenkins /home/jenkins/.ansible.cfg
            RUN chown -R jenkins:jenkins /home/jenkins

            USER jenkins
            ADD .profile /home/jenkins/.profile
            ADD .ansible.cfg /home/jenkins/.ansible.cfg
            USER root
            ADD docker-entrypoint.sh /usr/local/bin
            RUN chmod +x /usr/local/bin/docker-entrypoint.sh
            RUN rm -rf /etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_dsa_key
            EXPOSE 22
            ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
            CMD ["/usr/sbin/sshd", "-D"]

        - path: /home/cisco/requirements.txt
          owner: cisco:cisco
          permissions: '0644'
          content: |-
              cffi
              ncclient
              paramiko
              cmlutils
              pyats[full]
              robotframework
              ansible

        - path: /home/cisco/workspace.init
          owner: cisco:cisco
          permissions: '0644'
          content: |-
              #!/bin/bash

              # This is an example workspace.init file that you can volume mount in docker
              # into your pyATS container's workspace. Inside here you can perform various
              # setups (outside of pip requirements.txt), such as:
              #   - adding known ssh hosts into known_hosts using ssh-keyscan
              #   - cloning git repositories
              #   - setting up python packages/source code into development mode
              #   - etc

              set -e

              # trust & store gitea's ssh key
              ssh-keyscan gitea.tooling.provider.test:3000 >> ~/.ssh/known_hosts 2> /dev/null
              git clone https://gitea.tooling.provider.test:3000/infraautomator/NetCICD.git

        - path: /home/cisco/.ansible.cfg
          owner: cisco:cisco
          permissions: '0644'
          content: |-
            [defaults]
            host_key_checking = False
            nocows = True
            interpreter_python = auto_silent
            display_skipped_hosts = no

            # Installs collections into /home/ubuntu/.ansible/collections/namespace/collection_name
            collections_paths = /home/ubuntu/.ansible/collections

            # Installs roles into /home/ubuntu/.ansible/roles/namespace.rolename
            roles_path = /home/ubuntu/.ansible/roles

        - path: /home/cisco/.profile
          owner: cisco:cisco
          permissions: '0644'
          content: |-
            #!/bin/sh
            export JAVA_HOME=/usr

            if wget -q --no-check-certificate --method=HEAD https://gitea.tooling.provider.test:3000/infraautomator/; then
              echo "Setting git to Gitea." >>/home/ubuntu/install-log.txt
              export GIT_URL=https://gitea.tooling.provider.test:3000/infraautomator/
            else
              echo "Setting git to Github." >>/home/ubuntu/install-log.txt
              export GIT_URL=https://github.com/Devoteam/
            fi

            if grep -q prepared NetCICD_state; then
                echo "Lab already prepared"
            else
                git config --global user.name "netcicd-pipeline"
                git config --global user.email "netcicd-pipeline@infraautomator.example.net"
                git -c http.sslVerify=false clone ${GIT_URL}NetCICD.git
                cd NetCICD
                git status
                echo '====================== Preparing CML lab ======================'
                cd roles/box/vars
                ln -s stage-box.yml main.yml
                cd ~/NetCICD
                ansible-playbook -i vars/stage-box prepare.yml -e stage="box"
                echo "prepared" > ../NetCICD_state
            fi

            echo '=================== Ready for modification ===================='
            echo 'You can now:'
            echo ' - create a branch with git branch <mybranch>'
            echo ' - view which files you changed with git status'
            echo ' - stage your changed files with git add'
            echo ' - commit with git commit -m "<commit message>"'
            echo ' - push the changes to the git server with:'
            echo ''
            echo ' git push --set-upstream origin <mybranch>'
            echo ''
            echo ' you may have to log in with your username/password'
            echo ''
            echo 'If you want to configure box-level: '
            echo ''
            echo ' ansible-playbook -i vars/stage-box stage-box.yml -e stage="box"'
            echo ''
            echo '========================= Have Fun! ==========================='

        - path: /etc/ssh/ssh_config
          owner: root:root
          permissions: '0644'
          content: |-
            Host *
                PasswordAuthentication yes
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
                HostkeyAlgorithms ssh-dss,ssh-rsa
                KexAlgorithms +diffie-hellman-group14-sha1


      users:
      - gecos: "user configured for console login via cisco/cisco"
        groups:
        - sudo
        - docker
        - wheel
        name: cisco
        # password hash is "cisco" (MD5-based password "mkpasswd -5")
        passwd: "$1$ZmGq.4za$8JZnpj4SkcF9v3AJQaOX//"
        # this key will be added to the user "cisco"
        ssh_authorized_keys:
        - your-ssh-pubkey-line-for-user-cisco-goes-here
      # this key will be added to the user "core"
      ssh_authorized_keys:
      - your-ssh-pubkey-line-for-user-core-goes-here
    cpu_limit: 100
    cpus: 2
    data_volume: 0
    hide_links: false
    id: n9
    label: coreos-0_0
    node_definition: coreos
    ram: 2048
    tags: []
    x: -390
    y: -94
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
      - id: i1
        label: eth1
        slot: 1
        type: physical
  - boot_disk_size: 0
    configuration: virbr0
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n10
    label: ext-conn-2
    node_definition: external_connector
    ram: 0
    tags: []
    x: -390
    y: -203
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical