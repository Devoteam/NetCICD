lab:
  description: LAB specifically created for NetCICD Box testing
  notes: ''
  title: stage-box.yaml
  version: 0.1.0
links:
  - id: l0
    n1: n0
    n2: n2
    i1: i1
    i2: i0
    label: CE1,141, ios-GigabitEthernet0/0<->Management VLAN-port0
  - id: l1
    n1: n1
    n2: n2
    i1: i1
    i2: i2
    label: PE1, 131, XRv-MgmtEth0/0/CPU0/0<->Management VLAN-port2
  - id: l2
    n1: n3
    n2: n2
    i1: i1
    i2: i1
    label: PE3, 133, nxos-mgmt0<->Management VLAN-port1
  - id: l3
    n1: n4
    n2: n2
    i1: i1
    i2: i5
    label: RR1, 121, xe-GigabitEthernet1<->Management VLAN-port5
  - id: l4
    n1: n5
    n2: n6
    i1: i0
    i2: i0
    label: coreos-0_0-eth0<->ext-conn-2-port
  - id: l5
    n1: n5
    n2: n2
    i1: i1
    i2: i6
    label: coreos-0_0-eth1<->Management VLAN-port6
nodes:
  - boot_disk_size: 0
    configuration: |-
      aaa new-model
      !
      aaa session-id common
      aaa authorization exec default local
      !
      no ip icmp rate-limit unreachable
      !
      ip domain name netcicd
      !
      hostname cust1
      username netcicd-pipeline privilege 15 secret C!sco123
      enable secret C!sco123
      !
      ip tcp synwait-time 5
      ip ssh version 2
      crypto key gen rsa mod 2048
      !
      interface GigabitEthernet0/0
       ip address 10.255.1.141 255.255.255.0
       no shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/1
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/2
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      interface GigabitEthernet0/3
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
      !
      line vty 0 4
       transport input telnet ssh
      !
      end
    cpu_limit: 100
    cpus: 1
    data_volume: 0
    hide_links: false
    id: n0
    label: CE1,141, ios
    node_definition: iosv
    ram: 512
    tags:
      - CE1
    x: -650
    y: 0
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: GigabitEthernet0/0
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet0/1
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet0/2
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet0/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: |2-
      hostname provedge2
      telnet vrf default ipv4 server max-servers 10
      telnet vrf Mgmt-intf ipv4 server max-servers 10
      domain name netcicd
      domain lookup disable
      username netcicd-pipeline
        group root-lr
        secret 0 C!sco123
      !
      username cisco
      group root-lr
      group cisco-support
      password cisco
      !
      username admin
      group root-lr
      group cisco-support
      password admin
      !
      username lab
      group root-lr
      group cisco-support
      password lab
      !
      interface MgmtEth0/0/CPU0/0
       description *** management ***
       ipv4 address 10.255.1.131 255.255.255.0
       no shutdown
      !
      netconf agent tty
      !
      netconf-yang agent
       ssh
      !
      ssh server v2
      ssh server netconf vrf default
      end
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n1
    label: PE1, 131, XRv
    node_definition: iosxrv9000
    ram: 0
    tags: []
    x: -500
    y: 100
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: MgmtEth0/0/CPU0/0
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet0/0/0/0
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet0/0/0/1
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet0/0/0/2
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: ums-c5c8cae1-ce
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n2
    label: Management VLAN
    node_definition: unmanaged_switch
    ram: 0
    tags: []
    x: -500
    y: 0
    interfaces:
      - id: i0
        label: port0
        slot: 0
        type: physical
      - id: i1
        label: port1
        slot: 1
        type: physical
      - id: i2
        label: port2
        slot: 2
        type: physical
      - id: i3
        label: port3
        slot: 3
        type: physical
      - id: i4
        label: port4
        slot: 4
        type: physical
      - id: i5
        label: port5
        slot: 5
        type: physical
      - id: i6
        label: port6
        slot: 6
        type: physical
      - id: i7
        label: port7
        slot: 7
        type: physical
  - boot_disk_size: 0
    configuration: |-
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
      username netcicd-pipeline password C!sco123 role network-operator
      username netcicd-pipeline role network-admin
      !
      license grace-period
      !
      hostname PE3
      !
      feature telnet
      feature privilege
      feature scp
      feature ssh
      !
      interface mgmt0
          description OOB Management
          ip address 10.255.1.133 255.255.255.0
          duplex auto
          no shut
      !
      ssh key rsa 2048
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n3
    label: PE3, 133, nxos
    node_definition: nxosv9000
    ram: 0
    tags: []
    x: -350
    y: 0
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet2/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet2/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet2/3
        slot: 3
        type: physical
  - boot_disk_size: 0
    configuration: |-
      hostname reflector
      !
      username netcicd-pipeline privilege 15 secret C!sco123
      !
      interface GigabitEthernet1
       ip address 10.255.1.121 255.255.255.0
       negotiation auto
       no shutdown
      enable secret C!sco123
      aaa new-model
      aaa session-id common
      aaa authorization exec default local
      ip domain name netcicd
      ip ssh version 2
      !
      line vty 0 4
        transport input ssh
      !
      crypto key gen rsa mod 2048
      !
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n4
    label: RR1, 121, xe
    node_definition: csr1000v
    ram: 0
    tags: []
    x: -650
    y: 100
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: GigabitEthernet1
        slot: 0
        type: physical
      - id: i2
        label: GigabitEthernet2
        slot: 1
        type: physical
      - id: i3
        label: GigabitEthernet3
        slot: 2
        type: physical
      - id: i4
        label: GigabitEthernet4
        slot: 3
        type: physical
  - boot_disk_size: 64
    configuration: |-
      #cloud-config
      hostname: netcicd-agent
      coreos:
        units:
          - name: static.network
            content: |
              [Match]
              Name=eth1
              [Network]
              Address=10.255.1.3/24
          - name: runcmd.service
            command: start
            content: |
              [Unit]
              Description=Start container
              [Service]
              Type=oneshot
              ExecStart=/bin/sh -c "docker run --name netcicd \
                --add-host=gitea.tooling.provider.test:172.16.11.3 \
                --add-host=jenkins.tooling.provider.test:172.16.11.8 \
                --add-host=nexus.tooling.provider.test:172.16.11.9 \
                --env J_SECRET=jenkins_secret \
                -d netarch/netcicd:netcicd-4.1;"
      write_files:
        - path: /etc/docker/daemon.json
          owner: root:root
          permissions: '0644'
          content: |-
            {
                "insecure-registries" : ["nexus.tooling.provider.test:8181"],
                "insecure-registries" : ["nexus.tooling.provider.test:8182"],
                "registry-mirrors": ["http://nexus.tooling.provider.test:8181"],
                "registry-mirrors": ["http://nexus.tooling.provider.test:8182"]
            }

        - path: /home/cisco/workspace.init
          owner: cisco:cisco
          permissions: '0644'
          content: |-
              #!/bin/bash

              # This is an example workspace.init file that you can volume mount in docker
              # into your pyATS container's workspace. Inside here you can perform various
              # setups (outside of pip requirements.txt), such as:
              #   - adding known ssh hosts into known_hosts using ssh-keyscan
              #   - cloning git repositories
              #   - setting up python packages/source code into development mode
              #   - etc

              set -e

              # trust & store gitea's ssh key
              ssh-keyscan gitea.tooling.provider.test:3000 >> ~/.ssh/known_hosts 2> /dev/null
              git clone -c http.sslVerify=false https://gitea.tooling.provider.test:3000/infraautomator/NetCICD.git

      users:
      - gecos: "user configured for console login via cisco/cisco"
        groups:
        - sudo
        - docker
        - wheel
        name: cisco
        # password hash is "cisco" (MD5-based password "mkpasswd -5")
        passwd: "$1$ZmGq.4za$8JZnpj4SkcF9v3AJQaOX//"
        # this key will be added to the user "cisco"
        ssh_authorized_keys:
        - your-ssh-pubkey-line-for-user-cisco-goes-here
      # this key will be added to the user "core"
      ssh_authorized_keys:
      - your-ssh-pubkey-line-for-user-core-goes-here
    cpu_limit: 100
    cpus: 2
    data_volume: 0
    hide_links: false
    id: n5
    label: coreos-0_0
    node_definition: coreos
    ram: 2048
    tags: []
    x: -500
    y: -99
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
      - id: i1
        label: eth1
        slot: 1
        type: physical
  - boot_disk_size: 0
    configuration: virbr0
    cpu_limit: 100
    cpus: 0
    data_volume: 0
    hide_links: false
    id: n6
    label: ext-conn-2
    node_definition: external_connector
    ram: 0
    tags: []
    x: -501
    y: -200
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical