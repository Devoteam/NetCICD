# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

####################################################################
# Classic IOS specific commands                                    #
####################################################################

- name: "IOS Set timezone"
  cisco.ios.ios_config:
    src: "{{ ansible_network_os }}_cli_clock_timezone.j2"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - ios_timezone

- name: "IOS Set summertime"
  cisco.ios.ios_config:
    src: "{{ ansible_network_os }}_cli_clock_summertime.j2"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - ios_summertime

- name: "IOS Configure ntp key"
  cisco.ios.ios_config:
    src: "{{ ansible_network_os }}_cli_ntp_key.j2"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - ios_ntp_key

- name: "IOS Configure ntp"
  cisco.ios.ios_config:
    src: "{{ ansible_network_os }}_cli_ntp.j2"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - ios_ntp

- name: "IOS Configure ntp servers"
  cisco.ios.ios_config:
    src: "{{ ansible_network_os }}_cli_ntp_servers.j2"
  with_items: "{{ ntp }}"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - ios_ntp_servers

####################################################################
# IOSXE specific commands                                          #
####################################################################

# IOSXE is managed through classic IOS or netconf

####################################################################
# IOSXR specific commands                                          #
####################################################################

# IOSXR is managed through netconf

####################################################################
# NXOS specific commands                                           #
####################################################################

- name: "nxos Set timezone"
  cisco.nxos.nxos_config:
    src: "{{ ansible_network_os }}_cli_clock_timezone.j2"
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - nxos_timezone

- name: "nxos Set summertime"
  cisco.nxos.nxos_config:
    src: "{{ ansible_network_os }}_cli_clock_summertime.j2"
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - nxos_summertime

- name: "nxos Configure ntp key"
  cisco.nxos.nxos_config:
    src: "{{ ansible_network_os }}_cli_ntp_key.j2"
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - nxos_ntp_key

- name: "nxos Configure ntp"
  cisco.nxos.nxos_config:
    src: "{{ ansible_network_os }}_cli_ntp.j2"
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - nxos_ntp

- name: "nxos Configure ntp servers"
  cisco.nxos.nxos_config:
    src: "{{ ansible_network_os }}_cli_ntp_servers.j2"
  with_items: "{{ ntp }}"
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and ansible_connection is defined and ansible_connection == "network_cli")
#  notify:
#    - nxos_ntp_servers

####################################################################
# Netconf specific commands                                        #
####################################################################

- name: "NC Set clock and timezone"
  ansible.netcommon.netconf_config:
    content: "{{ lookup('template', '{{ ansible_network_os }}_nc_clock_timezone.j2') }}"
  when: (ansible_network_os is defined and ansible_network_os == "iosxr" and ansible_connection is defined and ansible_connection == "netconf")
#  notify: 
#    - iosxr_time

- name: "NC Set summertime"
  ansible.netcommon.netconf_config:
    content: "{{ lookup('template', '{{ ansible_network_os }}_nc_clock_summertime.j2') }}"
  when: (ansible_network_os is defined and ansible_network_os == "iosxr" and ansible_connection is defined and ansible_connection == "netconf")
#  notify: 
#    - iosxr_summertime

- name: "NC Configure ntp"
  ansible.netcommon.netconf_config:
    content: "{{ lookup('template', '{{ ansible_network_os }}_nc_ntp.j2') }}"
  when: (ansible_network_os is defined and ansible_network_os == "iosxr" and ansible_connection is defined and ansible_connection == "netconf")
#  notify: 
#    - iosxr_ntp

- name: "NC Configure ntp key"
  ansible.netcommon.netconf_config:
    content: "{{ lookup('template', '{{ ansible_network_os }}_nc_ntp_key.j2') }}"
  when: (ansible_network_os is defined and ansible_network_os == "iosxr" and ansible_connection is defined and ansible_connection == "netconf")
#  notify: 
#    - iosxr_ntp_key

- name: "NC Configure ntp servers"
  ansible.netcommon.netconf_config:
    content: "{{ lookup('template', '{{ ansible_network_os }}_nc_ntp_servers.j2') }}"
  with_items: "{{ ntp }}"
  when: (ansible_network_os is defined and ansible_network_os == "iosxr" and ansible_connection is defined and ansible_connection == "netconf")
#  notify: 
#    - iosxr_ntp_servers
    
####################################################################
# Kick off handlers for unit testing                               #
####################################################################
    
- name: force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers
