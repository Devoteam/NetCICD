# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

####################################################################
# Generic network interface configuration                          #
####################################################################

- name: "Configure IOS GE interfaces"
  cisco.ios.ios_interface:
    name: "{{ item.type }}{{ item.id }}"
    description: "{{ item.description }}"
    state: present
    enabled: "{{ item.no_shut }}"
  when: (ansible_network_os is defined and ansible_network_os == "ios" and item.node == inventory_hostname)
  loop: "{{ interfaces }}"
#  notify: 
#   - ios_interfaces

- name: "Set IP addresses IOS GE interfaces"
  cisco.ios.ios_l3_interface:
    name: "{{ item.type }}{{ item.id }}"
    ipv4: "{{ item.ip_address }}/{{ item.prefixlength }}"
    state: present
  when: (ansible_network_os is defined and ansible_network_os == "ios" and item.node == inventory_hostname)
  loop: "{{ interfaces }}"
#  notify: 
#   - ios_interfaces

####################################################################
# IOSXE specific commands                                          #
####################################################################

# IOSXE is managed through classic IOS or netconf

####################################################################
# IOSXR specific commands                                          #
####################################################################

# IOSXR is managed through netconf

####################################################################
# NXOS specific commands                                           #
####################################################################

- name: "Configure NX-OS interfaces"
  cisco.nxos.nxos_interface:
    name: "{{ item.type }}{{ item.id }}"
    description: "item.description"
    admin_state: up
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and item.node == inventory_hostname)
  loop: "{{ interfaces }}"
#  notify: 
#   - nxos_interfaces

- name: "Set IP addresses NX-OS Interfaces"
  cisco.nxos.nxos_l3_interfaces:
    config:
      - name: "{{ item.type }}{{ item.id }}"
        ipv4: "{{ item.ip_address }}/{{ item.prefixlength }}"
    state: present
  when: (ansible_network_os is defined and ansible_network_os == "nxos" and item.bundle == 0 and item.node == inventory_hostname)
  loop: "{{ interfaces }}"
#  notify: 
#   - nxos_interfaces

####################################################################
# NETConf specific commands                                        #
####################################################################
                                                                                                                                            
- name: "Netconf configure interfaces for IOSXR"                                                        
  ansible.netcommon.netconf_config:                                                                                     
    src: "{{ ansible_network_os }}_nc_GEinterface.j2"                                                    
  when: (ansible_connection is defined and ansible_network_os == "iosxr" and ansible_connection == "netconf")                             
#  notify:                                                                                         
#    - iosxr_interfaces                                                                                    
                                                                        
####################################################################
# Kick off handlers                                                #
####################################################################
- name: force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers